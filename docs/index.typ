#import "lib/gost.typ": init

#show: init

= Цель работы

Изучение структур данных «линейный
список» и «циклический список», а также получение практических навыков
их реализации.

= Выполнение индивидуального задания

Реализовать структуры данных «линейный список» и «циклический
список» в соответствии с заданным вариантом. Дополнительно программа
должна осуществлять следующие операции:
1) Добавление/удаление элемента в список (с клавиатуры);
2) Вывод исходного и результирующего списков на экран;
3) Если списки являются многочленами, в выводе должна быть
отражена степень каждого элемента.

Элементы
последовательности, или коэффициенты многочлена (в зависимости от
варианта) – числовые значения элемента списка, количество таких элементов
списка равно длине последовательности, или количеству коэффициентов
многочлена.

Вариант 2

Дана последовательность неповторяющихся чисел $a_1,a_2,dots,a_n$.
Получить две последовательности. Первая – список целых частей
каждого числа в исходной последовательности. Вторая – список
дробных частей, если элемент исходной последовательности
является целым числом, такой элемент не включается в
результирующие последовательности.
$ B="whole"(a_1),"whole"(a_2)dots quad K= "fract"(a_1),"fract"(a_2)dots $

При выполнении задания использовать вид списка: Линейный односвязный.
= Листинг программы

LinearList.hpp

#raw(read("../src/LinearList.hpp"), lang: "cpp", block: true)

main.cpp

#raw(read("../src/main.cpp"), lang: "cpp", block: true)

= Скриншоты работы программы

На рисунке @work представлена работа программы:

#figure(
  image("images/000-работа программы.png"),
  caption: "Работа программы",
) <work>

= Выводы

Изучил структуры данных «линейный
список» и «циклический список». Реализовал работу линейного списка действительных чисел в C++.
